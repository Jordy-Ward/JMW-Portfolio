# Configuration that automatically detects environment
# Uses H2 in-memory database for local development, PostgreSQL for production

# Database Configuration - H2 for local, PostgreSQL for production
spring.datasource.url=${DATABASE_URL:jdbc:h2:mem:rsawebapp}
spring.datasource.username=${DATABASE_USERNAME:sa}
spring.datasource.password=${DATABASE_PASSWORD:}
spring.datasource.driver-class-name=${DATABASE_DRIVER:org.h2.Driver}

# H2 Console for local development (only active when H2 is used)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# SSL Configuration (for cloud databases)
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1

# JPA/Hibernate Configuration - automatically detects database dialect
spring.jpa.database-platform=${JPA_DIALECT:org.hibernate.dialect.H2Dialect}
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.show-sql=true
# Local development optimizations
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true

# CORS for both local and production
spring.web.cors.allowed-origins=${FRONTEND_URL:http://localhost:3000}