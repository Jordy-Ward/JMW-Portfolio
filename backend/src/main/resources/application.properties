# Simple Configuration: H2 for local development, PostgreSQL for production
# Local development uses H2 (no setup required)
# Production uses environment variables for PostgreSQL

# Database Configuration
spring.datasource.url=${DATABASE_URL:jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE}
spring.datasource.username=${DATABASE_USERNAME:sa}
spring.datasource.password=${DATABASE_PASSWORD:}
spring.datasource.driver-class-name=${DATABASE_DRIVER:org.h2.Driver}

# JPA/Hibernate Configuration
spring.jpa.database-platform=${JPA_DIALECT:org.hibernate.dialect.H2Dialect}
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# H2 Console (for local development only)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# CORS Configuration
spring.web.cors.allowed-origins=http://localhost:3000,https://rsa-web-app.vercel.app
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# H2 Console (disabled in production)
spring.h2.console.enabled=${H2_CONSOLE_ENABLED:true}

# CORS for both local and production
spring.web.cors.allowed-origins=${FRONTEND_URL:http://localhost:3000}